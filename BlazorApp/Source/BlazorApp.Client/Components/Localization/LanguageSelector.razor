@using BlazorApp.Client.Infrastructure.Common
@inject Microsoft.Extensions.Localization.IStringLocalizer<LanguageSelector> _localizer
<MudTooltip Text="@CurrentLanguage">
<MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
    @foreach (var language in LocalizationConstants.SupportedLanguages)
    {
        if(language.Code == CurrentLanguage)
            {
               <MudMenuItem style="background:var(--mud-palette-primary); color:white" >@_localizer[language.DisplayName]</MudMenuItem>
            }
            else
            {
                <MudMenuItem OnClick="(()=> ChangeLanguageAsync(language.Code))">@_localizer[language.DisplayName]</MudMenuItem>
            }

    }
</MudMenu>
</MudTooltip>
@code {
    public string? CurrentLanguage { get; set; } = "en-US";

    protected override async Task OnInitializedAsync()
    {
        var currentPreference = await _clientPreferenceManager.GetPreference() as ClientPreference;
        if(currentPreference!=null)
        {
            CurrentLanguage = currentPreference.LanguageCode;
        }
        else
        {
            CurrentLanguage = "en-US";
        }

    }
    private async Task ChangeLanguageAsync(string languageCode)
    {
        var result = await _clientPreferenceManager.ChangeLanguageAsync(languageCode);
        _navigationManager.NavigateTo(_navigationManager.Uri, forceLoad: true);
    }
}
